arrive_greetings:
  alias: "Greetings on Arrival Home"
  sequence:
    - service: tts.google_translate_say
      entity_id: group.google_home_group
      data_template:
        message: “{{ speech_message }}”
        
        
        
######################################################################################################
###Script to send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # data:
    #   call_no_announcement:
    #   call_dark_outside:
    #   call_window_check:
    #   call_garage_check:
    #   call_responsibilities
    #   call_light_check
    #   call_inside_weather
    #   call_outside_weather
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################

speech_engine:
  alias: "Speech Engine"
  sequence:
    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_devices
          state: 'home'
        - condition: state
          entity_id: input_boolean.guest
          state: 'on'

    - service: script.speech_processing
      data_template:
        media_player: >-
            {% if media_player | length == 0 %}
              {% set media_player = [
                'media_player.badkamer',
                'media_player.keuken_hub'
              ] %}
            {% endif %}
            {% if media_player is not string and media_player is sequence %}
              {% set media_player = media_player|join(', ') %}
            {% endif %}
            {{ media_player }}
        speech_message: !include templates/briefing.yaml
          
    - service: input_boolean.turn_off
      data:
        entity_id:
          - input_boolean.home_stats
          - input_boolean.responsibilities
          
          
          
######################################################################################################
###Script to actually send notifications to the ChromeCast Audios during normal hours and only when we are home! Call like this:
  # action:
    # service: script.speech_engine
    # speech_message:
# # @CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
######################################################################################################

speech_processing:
  sequence:
    - condition: and
      conditions:
        - condition: or
          conditions:
            - condition: state
              entity_id: group.all_devices
              state: 'home'
            - condition: state
              entity_id: input_boolean.guest
              state: 'on'
        - condition: or
          conditions:
            - condition: time
              after: '07:00:00'
              before: '23:00:00'
            - condition: state
              entity_id: input_boolean.alert_mode
              state: 'on'
        - condition: state
          entity_id: input_boolean.speech_notifications
          state: 'on'

    - service: media_player.volume_set
      data_template:
        entity_id: group.google_home_group
        volume_level: >-
          {% if now().strftime('%H')|int < 12 and now().strftime('%H')|int > 6 %}
            0.3
          {% elif now().strftime('%H')|int > 12 and now().strftime('%H')|int < 20 %}
            0.5
          {% else %}
            0.3
          {% endif %}
    - service: tts.google_translate_say
      entity_id: group.google_home_group
      data_template:
        message: “{{ speech_message }}”

    - service: input_boolean.turn_off
      data:
        entity_id:
          - input_boolean.alert_mode
          - input_boolean.lastmsg
          
          
'1569578493015':
  alias: random_kitchen
  sequence:
  # Check that it Extended Away mode is still on
  - condition: state
    entity_id: input_select.house_mode
    state: 'Extended Away'
    # Wait a random nmber of minutes between 15 and 90 and switch on
  - delay: '"00:{{ (range(15, 90)|random|int) }}:00"'
  - data:
      entity_id:
      - group.lampen_keuken
    service: light.turn_on
    # Wait for between 3 minutes and 9 minutes and switch off
  - delay: '"00:{{ (range(3, 9)|random|int) }}:00"'
  - data:
      entity_id:
      - group.lampen_keuken
    service: light.turn_off
  # Loop the script for next time.
  - service: script.random_kitchen_loop
'1569578623906':
  alias: random_kitchen_loop
  sequence:
  # Stop the calling script
  - service: homeassistant.turn_off
    entity_id: script.random_kitchen
  - delay: 00:05:00

  # Check that Extended Away mode is on and restart the script
  - condition: state
    entity_id: input_select.house_mode
    state: 'Extended Away'
  - service: script.random_kitchen
'15695764564906':
  alias: mockupancy
  sequence:
    # Wait until it is after 6pm and dark to start the routine
    - wait_template: "{{ states.sensor.time.state >= '18:00' and is_state('binary_sensor.dark_outside' , 'on') }}"

    # Check that it Extended Away mode is still on
    - condition: state
      entity_id: input_select.house_mode
      state: 'Extended Away'

    # Pick a random bedtime between 10pm and midnight.
    - service: input_datetime.set_time
      data_template:
        entity_id: input_datetime.mockupancy_bedtime
        time: "{{ (range(22, 23)|random|int) }}:{{ (range(0, 59)|random|int) }}:00"

    # Start the routine, switch on the 'usual' lights
    - data:
        entity_id:
        - group.lampen_woonkamer
      service: light.turn_on

    # Start scripts to randomise occasional lights
    #- service: script.random_master_bedroom
    - service: script.random_kitchen

    # Start scripts to randomise kids' bedtime simulation
    #- service: script.random_guest_room
    #- service: script.random_ashleys_room

    # 1 hour before bedtime, change lighting as if TV was turned off
    - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (60 * 60))|timestamp_custom('%H:%M', false)) }}"
    - data:
        entity_id:
        - group.lampen_entree
        - group.lampen_hal
      service: light.turn_on

    # 20 minutes before bedtime, turn on kitchen lights only
    - wait_template: "{{ states('sensor.time') == (((state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')) - (20 * 60))|timestamp_custom('%H:%M', false)) }}"
    - data:
        entity_id:
        - group.lampen_keuken
      service: light.turn_on

    # Stop kitchen/master bedroom randomisation
    - service: homeassistant.turn_off
      entity_id:
        #- script.random_master_bedroom
        #- script.random_master_bedroom_loop
        - script.random_kitchen
        - script.random_kitchen_loop

    # At 'bedtime', turn on Master Bedroom for random time between 2 and 15 minutes
    # turn off kitchen, wait 20-30 seconds, turn off living room wait 30-59 seconds,
    # turn on bedroom.
    - wait_template: "{{ states('sensor.time') == (state_attr('input_datetime.mockupancy_bedtime' , 'timestamp')|int|timestamp_custom('%H:%M', False)) }}"
    - service: homeassistant.turn_on
      entity_id: group.lampen_hal_boven
    - delay: "00:00:{{ (range(15, 59)|random|int) }}"
    - service: homeassistant.turn_off
      entity_id: group.lampen_woonkamer
    - delay: "00:00:{{ (range(20, 30)|random|int) }}"
    - service: homeassistant.turn_off
      entity_id: group.lampen_keuken
    - delay: "00:00{{ (range(20, 30)|random|int) }}"
    - service: homeassistant.turn_on
      entity_id: group.lampen_slaapkamer
      data:
        brightness: 80
    - delay: "00:{{ (range(2, 15)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: group.lampen_hal_boven
    - delay: "00:{{ (range(15, 59)|random|int) }}:00"
    - service: homeassistant.turn_off
      entity_id: group.lampen_slaapkamer

#    # After a random time between 15 minutes and an hour, turn off the lights
    - delay: "00:{{ (range(15, 30)|random|int) }}:00"
    - data:
        entity_id:
        - group.all_lights
      service: light.turn_off

    # If light before 7am, switch off lights, stop and loop, if not run a further script first
#    - wait_template: "{{ now().hour == 7 }}"
    - wait_template: "{{ states.sensor.time.state == '07:00' }}"
    - service_template: >
        {% if states('binary_sensor.dark_outside' , 'on') %} script.morning_mockupancy
        {% else %} script.mockupancy_loop {% endif %}
'156gdfgfsdfs3015':
  alias: mockupancy_loop
  sequence:
  # Switch off the lights, and make sure the calling scripts have stopped
  - service: homeassistant.turn_off
    entity_id:
      - group.all_lights
      - script.mockupancy
  - delay: 00:05:00

  # Check that it Extended Away mode is still on and restart the script for a new day
  - condition: state
    entity_id: input_select.house_mode
    state: 'Extended Away'
  - service: script.mockupancy
'156gdfgsdfg93015':
  alias: random_master_bedroom
  sequence:
  # Check that it Extended Away mode is still on
  - condition: state
    entity_id: input_select.house_mode
    state: 'Extended Away'
    # Wait a random nmber of minutes between 15 and 90 and switch on
  - delay: '"00:{{ (range(15, 90)|random|int) }}:00"'
  - data:
      entity_id:
      - group.lampen_slaapkamer
    service: light.turn_on
    # Wait for between 3 minutes and 9 minutes and switch off
  - delay: '"00:{{ (range(3, 9)|random|int) }}:00"'
  - data:
      entity_id:
      - group.lampen_slaapkamer
    service: light.turn_off
  # Loop the script for next time.
  - service: script.random_master_bedroom_loop
'15695gsdfgsdfg906':
  alias: random_master_bedroom_loop
  sequence:
  # Stop the calling script
  - service: homeassistant.turn_off
    entity_id: script.random_master_bedroom
  - delay: 00:05:00

  # Check that Extended Away mode is on and restart the script
  - condition: state
    entity_id: input_select.house_mode
    state: 'Extended Away'
  - service: script.random_master_bedroom
'156456456gsdfg906':
  alias: timer_start
  sequence:
    - service: timer.start
      data_template:
        entity_id: timer.cooking_timer
        duration: '{{ states.input_number.timer_hours.state | int }}:{{ states.input_number.timer_minutes.state | int }}:{{ states.input_number.timer_seconds.state | int }}'
'15645fsfssdfg906':
  alias: timer_cancel
  sequence:
    - service: timer.cancel
      data:
        entity_id: timer.cooking_timer
'1564hfghdfgg906':
  alias: extended_away_timer_start
  sequence:
    - service: timer.start
      data_template:
        entity_id: timer.extended_away_timer
        duration: '{{ states.input_number.timer_hours.state | int }}:{{ states.input_number.timer_minutes.state | int }}:{{ states.input_number.timer_seconds.state | int }}'
'1hdfghfghdfgg906':
  alias: extended_away_timer_cancel
  sequence:
    - service: timer.cancel
      data:
        entity_id: timer.extended_away_timer
'156fghdfghdf906':
  alias: kids_home_alone_timer_start
  sequence:
    - service: timer.start
      data_template:
        entity_id: timer.kids_home_alone_timer
        duration: '{{ states.input_number.timer_hours.state | int }}:{{ states.input_number.timer_minutes.state | int }}:{{ states.input_number.timer_seconds.state | int }}'
'1566546346dfg906':
  alias: kids_home_alone_timer_cancel
  sequence:
    - service: timer.cancel
      data:
        entity_id: timer.kids_home_alone_timer
'15645634563456dfg906':
  alias: guests_timer_start
  sequence:
    - service: timer.start
      data_template:
        entity_id: timer.guests_timer
        duration: '{{ states.input_number.timer_hours.state | int }}:{{ states.input_number.timer_minutes.state | int }}:{{ states.input_number.timer_seconds.state | int }}'
'15634563456g906':
  alias: guests_timer_cancel
  sequence:
    - service: timer.cancel
      data:
        entity_id: timer.guests_timer
'156456345fsdfsfsf':
  alias: fan_timer_start
  sequence:
    - service: timer.start
      data_template:
        entity_id: timer.fan_on_timer
        duration: '{{ states.input_number.timer_hours.state | int }}:{{ states.input_number.timer_minutes.state | int }}:{{ states.input_number.timer_seconds.state | int }}'
'156345637575675':
  alias: fan_timer_cancel
  sequence:
    - service: timer.cancel
      data:
        entity_id: timer.fan_on_timer